apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: enstate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:6.0.9-alpine
          ports:
            - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: enstate
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enstate
  namespace: enstate
spec:
  replicas: 2
  selector:
    matchLabels:
      app: enstate
  template:
    metadata:
      labels:
        app: enstate
    spec:
      containers:
        - name: enstate
          image: ghcr.io/v3xlabs/enstate:edge
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: OPENSEA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: opensea-api-key
                  key: api-key
            - name: RPC_URL
              valueFrom:
                secretKeyRef:
                  name: rpc-url-mainnet
                  key: rpc-url
            - name: REDIS_URL
              value: redis://redis.enstate.svc.cluster.local:6379
            - name: UNIVERSAL_RESOLVER
              value: 0x8cab227b1162f03b8338331adaad7aadc83b895e
            - name: IPFS_GATEWAY
              value: https://cloudflare-ipfs.com/ipfs/
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: enstate
  namespace: enstate
spec:
  selector:
    app: enstate
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: enstate
  namespace: enstate
  annotations:
    cert-manager.io/issuer: le-http
spec:
  ingressClassName: traefik
  rules:
    - host: enstate.rs
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: enstate
                port:
                  number: 3000
  tls:
  - hosts:
    - enstate.rs
    secretName: tls-enstate-ingress-http
